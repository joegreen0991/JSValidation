var Validator=function(e){var t=this,n,r=function(e){this._callbacks=[];this.options=u.merge({once:!1,memory:!0},e)},i=function(e){e=u.merge({state:"initial"},e);this._state=String(e.state);this._listeners={};this._stateOpts=u.nvl(e.statesOptions,{});this._actualStateOpts={};this._stateOptDefs={once:!!u.nvl(e.once,!0),memory:!!u.nvl(e.memory,!0),finalState:!!u.nvl(e.finalState,!1)}},s=function(e){var t=this;u.forEach(f,function(n){t[n]=function(){var r=e[n].apply(e,arguments);return r===e?t:r}});t.promise=function(){return this}},o=function(e){if(!(this instanceof o))return new o(e);var t=this;this._fsm=new i({state:"pending",statesOptions:l});var n=new s(this);this.promise=function(e){return u.isDef(e)?(u.merge(e,n),e):n};u.forEachKey(o.prototype,function(e,n){t[e]=u.bind(n,t)});this.pipe=this.then;u.isDef(e)&&e.call(this,this)},u,a={};a.isArray=Array.isArray||function(e){return"[object Array]"==toString.call(e)};a.toArray=function(e,t){var n=Array.prototype.slice.call(e,a.nvl(t,0));return 2<arguments.length?a.toArray(arguments,2).concat(n):n};a.nvl=function(e,t){return a.isDef(e)?e:t};a.isDef=function(e){return"undefined"!==typeof e};a.isFunction=function(e){return"function"===typeof e};a.merge=function(e,t){a.isDef(t)&&a.forEachKey(t,function(t,n){e[t]=n});return 2<arguments.length?a.merge.apply(a,a.toArray(arguments,2,e)):e};a.forEach=function(e,t,n){if(e.forEach)e.forEach(t,n);else for(var r=0;r<e.length;++r)a.isDef(e[r])&&t.call(n,e[r],r,e)};a.forEachKey=function(e,t,n){n=!a.nvl(n,!0);for(var r in e)(n||e.hasOwnProperty(r))&&t.call(e,r,e[r])};a.bind=function(e,t){"string"===typeof e&&(e=t[e]);if(e.bind)return e.bind.apply(e,a.toArray(arguments,1));if("function"!==typeof e)throw new TypeError("toolous.bind - what is trying to be bound is not callable");var n=a.toArray(arguments,2),r=function(){},i=function(){return e.apply(this instanceof r&&t?this:t,n.concat(a.toArray(arguments)))};r.prototype=e.prototype;i.prototype=new r;return i};u=a;r.prototype.add=function(e){this._callbacks.push(e);this.firedArgs&&(e.apply(this.firedContext,this.firedArgs),this.options.once&&(this._callbacks=[]));return this};r.prototype.fireWith=function(e){var t=u.toArray(arguments,1);this.options.memory&&(this.firedArgs=t,this.firedContext=e);u.forEach(this._callbacks,function(n){n.apply(e,t)});this.options.once&&(this._callbacks=[]);return this};r.prototype.fire=function(){return this.fireWith.apply(this,u.toArray(arguments,0,null))};i.prototype._getStateOptions=function(e){var t=this._actualStateOpts[e];u.isDef(t)||(this._actualStateOpts[e]=t=u.merge({},this._stateOptDefs,this._stateOpts[e]));return t};i.prototype._getCallbackList=function(e){var t=this._listeners[e];t||(t=this._getStateOptions(e),this._listeners[e]=t=new r(t));return t};i.prototype.on=function(e,t){e=String(e);this._getCallbackList(e).add(t)};i.prototype.state=function(e,t){if(u.isDef(e)){if(this._getStateOptions(this._state).finalState)return!1;this._state=e=String(e);var n=u.toArray(arguments,1),r=this._getCallbackList(e);r.fireWith.apply(r,n)}return this._state};var f="state then done fail always pipe progress".split(" "),l={resolved:{fire:"resolve",listen:"done",thenIndex:0,memory:!0,once:!0,query:"isResolved",finalState:!0},rejected:{fire:"reject",listen:"fail",thenIndex:1,memory:!0,once:!0,query:"isRejected",finalState:!0},pending:{fire:"notify",listen:"progress",thenIndex:2,memory:!0,once:!1}};u.forEachKey(l,function(e,t){var n=t.fire,r=t.query;o.prototype[t.listen]=function(t){var n=[];u.forEach(u.toArray(arguments),function(e){u.isArray(e)?n=n.concat(e):u.isFunction(e)&&n.push(e)});var r=this;u.forEach(n,function(t){r._fsm.on(e,t)});return this};o.prototype[n]=function(){this[n+"With"].apply(this,u.toArray(arguments,0,this.promise()));return this};o.prototype[n+"With"]=function(t){this._fsm.state.apply(this._fsm,u.toArray(arguments,1,e,t));return this};r&&(o.prototype[r]=function(){return this._fsm.state()===e})});o.prototype.always=function(){return this.done.apply(this,arguments).fail.apply(this,arguments)};o.prototype.state=function(){return this._fsm.state()};o.prototype.then=function(){var e=arguments,t=new o,n=this;u.forEachKey(l,function(r,i){var s=i.thenIndex,a=i.listen,f=u.isFunction(e[s])&&e[s];n[a](function(){var e=f&&f.apply(this,arguments);if(o.isObservable(e)){var r=e.promise();u.forEachKey(l,function(e,n){r[n.listen](function(){var e=u.toArray(arguments,0,this);t[n.fire+"With"].apply(t,e)})})}else{var s=o.isObservable(this)&&this.promise()===n.promise()?t.promise():this,e=f?[e]:u.toArray(arguments);t[i.fire+"With"].apply(t,[s].concat(e))}})});return t.promise()};o.isObservable=function(e){return null!==e&&u.isDef(e)&&u.isFunction(e.promise)};o.when=function(e){var t=u.toArray(arguments),n=new o,r=t.length,i={};if(1>=r)return o.isObservable(e)||(e=(new o).resolveWith(null,e)),e.promise();u.forEach(["resolve","notify"],function(e){i[e]={name:e,contexts:Array(r),values:Array(r),mark:function(e,t,n){this.contexts[e]=t;this.values[e]=n},createMarkFunction:function(e){var t=this;return function(n){t.mark(e,this,n)}},publish:function(){n[e+"With"].apply(n,[this.contexts].concat(this.values))}}});var s=function(){--r;0===r&&i.resolve.publish()};u.forEach(t,function(e,t){o.isObservable(e)?(e=e.promise(),e.done(i.resolve.createMarkFunction(t)),e.done(s),e.progress(i.notify.createMarkFunction(t)),e.progress(u.bind("publish",i.notify)),e.fail(function(e){n.rejectWith(this,e)})):(i.resolve.mark(t,void 0,e),s())});return n.promise()};n=o;var c=Validator.Util;e=c.extend({attr:"data-validate",ruleSeparator:/\s+/,ruleArgumentSeparator:":",argumentSeparator:",",onBeforeValidateElement:function(){},onBeforeValidateForm:function(){},onInputSuccess:function(){},onInputFail:function(){},onSuccess:function(e){e.submit()},onFail:function(){},defaultMessage:"Please check this field for errors"},Validator.plugins,e);this.message=function(t,n,r){return c.interpolate((e.messages[n]?e.messages[n]:e.defaultMessage).replace("{value}",t),r)};this.validate=function(t,n,r,i){r=r.slice(0);r.push(i);e.validators[n]?e.validators[n].apply(t,r):e.regex[n]?i(!t.value.length||e.regex[n].test(t.value)):c.error('A validator or regex has not been set for  "'+n+'"');return this};this.element=function(r){e.onBeforeValidateElement(r);for(var i=0,s=[],o=r.getAttribute(e.attr).split(e.ruleSeparator);i<o.length;i++){s[i]=n();var u=o[i].split(e.ruleArgumentSeparator);(function(e,n,i){t.validate(r,n,i,function(t){t?s[e].resolve(n,i):s[e].reject(n,i)})})(i,u[0],u[1]?u[1].split(e.argumentSeparator):[])}var a=n.when.apply(this,s);a.always(function(n,i){var s="resolved"===a.state()?e.onInputSuccess:e.onInputFail;s&&s(r,t.message(r.value,n,i),n,i)});return s};this.form=function(t){e.onBeforeValidateForm(t);for(var r=0,i=[],s=c.getElementsByTagNames("input,select,checkbox,textarea",t);r<s.length;++r)i=i.concat(this.element(s[r]));n.when.apply(this,i).then(function(){e.onSuccess(t)},function(){e.onFail(t)});return i}};Validator.plugin=function(e){Validator.Util.extend(Validator.plugins,Validator.Util.only(e,["messages","regex","validators"]))};Validator.Util={only:function(e,t){var n={},r;for(r in t)e[t[r]]&&(n[t[r]]=e[t[r]]);return n},interpolate:function(e,t){for(var n in t)e=e.replace("{"+n+"}",t[n]);return e},extend:function(){for(var e=function(t,n){for(var r in n)if(n.hasOwnProperty(r)){var i=n[r];t.hasOwnProperty(r)&&"object"===typeof t[r]&&"object"===typeof i?e(t[r],i):t[r]=i}return t},t={},n=0;n<arguments.length;n++)t=e(t,arguments[n]);return t},error:function(e){throw Error(e)},getElementsByTagNames:function(e,t){t||(t=document);for(var n=e.split(","),r=[],i=0;i<n.length;i++)for(var s=t.getElementsByTagName(n[i]),o=0;o<s.length;o++)r.push(s[o]);n=r[0];if(!n)return[];n.sourceIndex?r.sort(function(e,t){return e.sourceIndex-t.sourceIndex}):n.compareDocumentPosition&&r.sort(function(e,t){return 3-(e.compareDocumentPosition(t)&6)});return r}}
Validator.plugins = {
    'messages' : {
        'email'           : 'Please enter a valid email address',
        'url'             : 'Please enter a valid URL',
        'alpha'           : 'Please enter only alphabetic characters',
        'alnum'           : 'Please enter only alphabetic characters',
        'alnumextended'   : 'Please enter only A-Z 0-9 _ - characters',
        'integer'         : 'Please enter only whole integers',
        'number'          : 'Please enter a number',
        'positive'        : 'Please enter a positive number',
        'negative'        : 'Please enter a negative number',
        'telephone'       : 'Please enter a valid telephone number',
        'required'        : 'Please fill out this field',
        'length'          : 'Please ensure the value is exactly {0} characters in length',
        'minlength'       : 'Please ensure the value is greater than {0} characters in length',
        'maxlength'       : 'Please ensure the value is less than {0} characters in length',
        'empty'           : 'Please do not fill out this field',
        'min'             : 'Please enter a number greater than or equal to {0}',
        'max'             : 'Please enter a number less than or equal to {0}',
        'checked'         : 'Please check the box to continue'
    },

    'regex' : {
        'email'           : /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,
        'url'             : /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi,
        'alpha'           : /^[A-Za-z]+$/,
        'alnum'           : /^[A-Za-z0-9]+$/,
        'alnumextended'   : /^[A-Za-z0-9_-]+$/,
        'integer'         : /^\s*(\+|-)?\d+\s*$/,
        'number'          : /^\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*$/,
        'telephone'       : /^(?:\((\+?\d+)?\)|\+?\d+) ?\d*(-?\d{2,3} ?){0,4}$/,
        'required'        : /^\s*$/,
        'empty'           : /^$/
    },

    'validators' : {
        'positive' : function(callback){
            callback(Validator.plugins.regex.number.test(this.value) && this.value >= 0);
        },
        'negative' : function(callback){
            callback(Validator.plugins.regex.number.test(this.value) && this.value <= 0);
        },
        'min' : function(min,callback){
            callback(Validator.plugins.regex.number.test(this.value) && this.value >= parseFloat(min));
        },
        'max' : function(max,callback){
            callback(Validator.plugins.regex.number.test(this.value) && this.value <= parseFloat(max));
        },
        'required' :function(callback){
            callback(!Validator.plugins.regex.required.test(this.value));
        },
        'length' : function(size,callback){
            callback(this.value.length == size);
        },
        'minlength' : function(size,callback){
            callback(this.value.length >= size);
        },
        'maxlength' : function(size,callback){
            callback(this.value.length <= size);
        },
        'checked' : function(callback){
            callback(this.checked);
        }
    }
};